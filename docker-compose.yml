version: '3.8'

services:

  api:
    build:
      context: ./Gateway
    container_name: spring-api
    restart: always
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - "8080:8080"
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379

  consumer:
    build:
      context: ./consumer-python
    container_name: python-consumer
    restart: always
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - backend


  postgres:
    image: postgres:15
    restart: always
    container_name: postgres-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
