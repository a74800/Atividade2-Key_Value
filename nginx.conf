events {}

http {
    upstream api_cluster {
        server spring-api-1:8080 max_fails=3 fail_timeout=10s;
        server spring-api-2:8080 max_fails=3 fail_timeout=10s;
        server spring-api-3:8080 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 80;

        location / {
            # Cabeçalhos CORS para permitir chamadas da UI Swagger
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

            # Resposta imediata para pedidos OPTIONS (pré-voo CORS)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Redirecionamento para o cluster da API
            proxy_pass http://api_cluster;

            # Preservar informações do cliente
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # Tentativas em caso de falha
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;

            # Timeout para ligação e leitura da resposta
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }
    }
}
